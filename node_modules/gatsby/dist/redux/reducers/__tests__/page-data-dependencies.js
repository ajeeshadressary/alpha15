"use strict";

var reducer = require("../page-data-dependencies");

describe(`add page data dependency`, function () {
  it(`lets you add a node dependency`, function () {
    var action = {
      type: `ADD_PAGE_DEPENDENCY`,
      payload: {
        path: `/hi/`,
        nodeId: `123`
      }
    };

    expect(reducer(undefined, action)).toEqual({
      connections: {},
      nodes: {
        "123": [`/hi/`]
      }
    });
  });
  it(`lets you add a node dependency to multiple paths`, function () {
    var action = {
      type: `ADD_PAGE_DEPENDENCY`,
      payload: {
        path: `/hi/`,
        nodeId: `1.2.3`
      }
    };
    var action2 = {
      type: `ADD_PAGE_DEPENDENCY`,
      payload: {
        path: `/hi2/`,
        nodeId: `1.2.3`
      }
    };
    var action3 = {
      type: `ADD_PAGE_DEPENDENCY`,
      payload: {
        path: `/blog/`,
        nodeId: `1.2.3`
      }
    };

    var state = reducer(undefined, action);
    state = reducer(state, action2);
    state = reducer(state, action3);

    expect(state).toEqual({
      connections: {},
      nodes: {
        "1.2.3": [`/hi/`, `/hi2/`, `/blog/`]
      }
    });
  });
  it(`lets you add a connection dependency`, function () {
    var action = {
      type: `ADD_PAGE_DEPENDENCY`,
      payload: {
        path: `/hi/`,
        connection: `Markdown.Remark`
      }
    };
    var action2 = {
      type: `ADD_PAGE_DEPENDENCY`,
      payload: {
        path: `/hi2/`,
        connection: `Markdown.Remark`
      }
    };

    var state = reducer(undefined, action);
    state = reducer(state, action2);

    expect(state).toEqual({
      connections: {
        "Markdown.Remark": ["/hi/", "/hi2/"]
      },
      nodes: {}
    });
  });
  it(`removes duplicate paths`, function () {
    var action = {
      type: `ADD_PAGE_DEPENDENCY`,
      payload: {
        path: `/hi/`,
        nodeId: 1,
        connection: `MarkdownRemark`
      }
    };
    var action2 = {
      type: `ADD_PAGE_DEPENDENCY`,
      payload: {
        path: `/hi2/`,
        nodeId: 1,
        connection: `MarkdownRemark`
      }
    };

    var state = reducer(undefined, action);
    // Do it again
    state = reducer(state, action);
    // Add different action
    state = reducer(state, action2);

    expect(state.connections["MarkdownRemark"].length).toEqual(2);
    expect(state.nodes[1].length).toEqual(2);
  });
  it(`lets you add both a node and connection in one action`, function () {
    var action = {
      type: `ADD_PAGE_DEPENDENCY`,
      payload: {
        path: `/hi/`,
        connection: `MarkdownRemark`,
        nodeId: `SuperCoolNode`
      }
    };

    var state = reducer(undefined, action);

    expect(state).toMatchSnapshot();
  });
});