"use strict";

var _require = require("../actions"),
    actions = _require.actions,
    boundActions = _require.boundActions;

var nodeReducer = require("../reducers/nodes");

describe(`Create and update nodes`, function () {
  // TODO add these back when we stop directly consoleing errors.
  // Right now makes tests noisy.
  //
  // it(`validates created nodes`, () => {
  // const action = actions.createNode({
  // type: `Test`,
  // });
  // expect(action.type).toEqual(`VALIDATION_ERROR`);
  // });
  // it(`validates updated nodes`, () => {
  // const action = actions.updateNode({
  // type: `Test`,
  // });
  // expect(action.type).toEqual(`VALIDATION_ERROR`);
  // });

  it(`allows creating nodes`, function () {
    var action = actions.createNode({
      id: `hi`,
      contentDigest: `hasdfljds`,
      children: [],
      parent: `test`,
      mediaType: `test`,
      pluginName: `tests`,
      type: `Test`,
      pickle: true
    });
    expect(action).toMatchSnapshot();
    expect(nodeReducer(undefined, action)).toMatchSnapshot();
  });

  it(`allows updating nodes`, function () {
    var action = actions.createNode({
      id: `hi`,
      contentDigest: `hasdfljds`,
      children: [],
      parent: `test`,
      mediaType: `test`,
      pluginName: `tests`,
      type: `Test`,
      pickle: true
    });
    var updateAction = actions.createNode({
      id: `hi`,
      contentDigest: `hasdfljds`,
      children: [],
      parent: `test`,
      mediaType: `test`,
      pluginName: `tests`,
      type: `Test`,
      pickle: false
    });
    var state = nodeReducer(undefined, action);
    state = nodeReducer(state, updateAction);
    expect(state["hi"].pickle).toEqual(false);
  });
});