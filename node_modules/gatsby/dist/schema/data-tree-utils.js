"use strict";

var _assign = require("babel-runtime/core-js/object/assign");

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _ = require("lodash");
var flatten = require("flat");

var extractFieldExamples = exports.extractFieldExamples = function (_ref) {
  var nodes = _ref.nodes,
      selector = _ref.selector,
      _ref$deleteNodeFields = _ref.deleteNodeFields,
      deleteNodeFields = _ref$deleteNodeFields === undefined ? false : _ref$deleteNodeFields;

  var examples = nodes.reduce(function (mem, node) {
    var subNode = selector ? _.get(node, selector) : node;

    // Ignore undefined/null subnodes
    subNode = _.omitBy(flatten(subNode || {}), _.isNil);

    return (0, _assign2.default)({}, mem, subNode);
  }, {});

  examples = flatten.unflatten(examples, { safe: true });

  if (deleteNodeFields) {
    // Remove fields for traversing through nodes as we want to control
    // setting traversing up not try to automatically infer them.
    delete examples.children;
    delete examples.parent;
  }

  return examples;
};
var buildFieldEnumValues = exports.buildFieldEnumValues = function (nodes) {
  var enumValues = {};
  var fieldExamples = _.keys(flatten(extractFieldExamples({
    nodes,
    selector: ``,
    deleteNodeFields: true
  }), {
    maxDepth: 3,
    safe: true }));
  fieldExamples.forEach(function (field) {
    enumValues[field.replace(`.`, `___`)] = { field };
  });

  return enumValues;
};