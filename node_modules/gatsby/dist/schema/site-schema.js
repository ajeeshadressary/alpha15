"use strict";

var _graphql = require("graphql");

var _moment = require("moment");

var _moment2 = _interopRequireDefault(_moment);

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//import pagesSchema from './pages-schema'
var _require = require("./infer-graphql-type"),
    inferObjectStructureFromNodes = _require.inferObjectStructureFromNodes;

var _require2 = require("../redux"),
    store = _require2.store;

module.exports = function () {
  var config = store.getState().config;
  // Create site/page types.
  var metadataFields = function metadataFields() {
    var fields = inferObjectStructureFromNodes({
      nodes: [config.siteMetadata]
    });
    return fields;
  };

  var startTime = void 0;
  var siteType = new _graphql.GraphQLObjectType({
    name: `Site`,
    fields: {
      siteMetadata: {
        type: new _graphql.GraphQLObjectType({
          name: `SiteMetadata`,
          fields: metadataFields()
        })
      },
      development: {
        type: new _graphql.GraphQLObjectType({
          name: `DevelopmentConfig`,
          fields: {
            port: { type: _graphql.GraphQLString }
          }
        })
      },
      linkPrefix: {
        type: _graphql.GraphQLString,
        name: `prefixLink`,
        description: `Optionally prefix site links with this`
      },
      buildTime: {
        type: _graphql.GraphQLString,
        name: `buildTime`,
        description: `The time at which you ran the gatsby command).`,
        resolve: function resolve() {
          if (!startTime) {
            startTime = (0, _moment2.default)().subtract(process.uptime(), `seconds`).toJSON();
            return startTime;
          } else {
            return startTime;
          }
        }
      }
    }
  });

  return {
    site: {
      type: siteType,
      resolve() {
        return store.getState().config;
      }
    }
  };
};